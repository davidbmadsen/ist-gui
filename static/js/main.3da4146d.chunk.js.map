{"version":3,"sources":["logo.svg","Map.js","App.js","reportWebVitals.js","index.js"],"names":["LocationPin","text","className","icon","locationIcon","SimpleMap","props","ws","WebSocket","origin","header","rejectUnauthorized","state","pos","lat","lng","zoom","id","console","log","this","onopen","onmessage","evt","message","JSON","parse","data","length","gpsData","gps","trackerID","setState","onclose","style","height","width","bootstrapURLKeys","key","defaultCenter","defaultZoom","toString","Component","defaultProps","center","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mOAAe,I,2ECOTA,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAClB,sBAAKC,UAAU,MAAf,UACE,cAAC,OAAD,CAAMC,KAAMC,IAAcF,UAAU,aACpC,mBAAGA,UAAU,WAAb,SAAyBD,SAOvBI,E,kDAEJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAwBRC,GAAK,IAAIC,UAAU,8BAA+B,CAChDC,OAAQ,KACRC,OAAQ,KACRC,oBAAoB,IA1BpB,EAAKC,MAAQ,CACXC,IAAM,CACJC,IAAK,QACLC,IAAK,QAEPC,KAAM,GACNC,GAAI,GARW,E,gEA+BE,IAAD,OAClBC,QAAQC,IAAI,aAEZC,KAAKb,GAAGc,OAAS,WACjBH,QAAQC,IAAI,wBAGZC,KAAKb,GAAGe,UAAY,SAAAC,GAClB,IAAMC,EAAUC,KAAKC,MAAMH,EAAII,MAG/B,GAAuB,IAAnBH,EAAQI,OAAc,CACxBV,QAAQC,IAAIK,EAAQ,IAIpB,IAAIX,EAAG,eAAO,EAAKD,MAAMC,KACnBC,EAAMU,EAAQ,GAAGK,QAAQC,IAAI,GAC7Bf,EAAMS,EAAQ,GAAGK,QAAQC,IAAI,GACnCjB,EAAIC,IAAMA,EACVD,EAAIE,IAAMA,EAEV,IAAIE,EAAKO,EAAQ,GAAGO,UACpB,EAAKC,SAAS,CAACnB,QACf,EAAKmB,SAAS,CAACf,SAKnBG,KAAKb,GAAG0B,QAAU,WAChBf,QAAQC,IAAI,6B,+BASd,OAEE,aADA,CACA,OAAKe,MAAO,CAAEC,OAAQ,QAASC,MAAO,QAAtC,SACE,cAAC,IAAD,CACEC,iBAAkB,CAAEC,IAAK,2CACzBC,cAAenB,KAAKR,MAAMC,IAC1B2B,YAAapB,KAAKR,MAAMI,KAH1B,SAMA,cAAC,EAAD,CACIF,IAAKM,KAAKR,MAAMC,IAAIC,IACpBC,IAAKK,KAAKR,MAAMC,IAAIE,IACpBd,KAAM,eAAkBmB,KAAKR,MAAMK,GAAIwB,WAAa,c,GApFxCC,aAAlBrC,EAcGsC,aAAe,CACpBC,OAAQ,CACN9B,IAAK,MACLC,IAAK,OAGPF,IAAM,CACJC,IAAK,QACLC,IAAK,QAEPC,KAAM,IAoEKX,QC9FAwC,MAVf,WACE,OACE,qBAAK3C,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,SCGO4C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3da4146d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import React, { Component } from 'react';\r\nimport GoogleMapReact from 'google-map-react';\r\nimport { Icon } from '@iconify/react'\r\nimport locationIcon from '@iconify/icons-mdi/map-marker'\r\nimport './map.css'\r\n\r\n\r\nconst LocationPin = ({ text }) => (\r\n  <div className=\"pin\">\r\n    <Icon icon={locationIcon} className=\"pin-icon\" />\r\n    <p className=\"pin-text\">{text}</p>\r\n  </div>\r\n)\r\n//var WebSocket = require('ws');\r\n\r\n\r\n\r\nclass SimpleMap extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pos : {\r\n        lat: 59.8969,\r\n        lng: 10.5750\r\n      },\r\n      zoom: 14,\r\n      id: 0,\r\n    }\r\n  };\r\n\r\n  static defaultProps = {\r\n    center: {\r\n      lat: 59.91,\r\n      lng: 10.72\r\n    },\r\n    // store position from the server here\r\n    pos : {\r\n      lat: 59.8969,\r\n      lng: 10.5750\r\n    },\r\n    zoom: 16\r\n  };\r\n  \r\n  ws = new WebSocket('wss://35.240.71.0:64000/sub', {\r\n    origin: null,\r\n    header: null,\r\n    rejectUnauthorized: false\r\n  })\r\n\r\n  componentDidMount() {\r\n    console.log(\"Version 1\")\r\n    \r\n    this.ws.onopen = () => {\r\n    console.log('Websocket connected')\r\n    }\r\n    \r\n    this.ws.onmessage = evt => {\r\n      const message = JSON.parse(evt.data)\r\n      \r\n      //console.log(message.length)\r\n      if (message.length !== 0) {\r\n        console.log(message[0])\r\n        \r\n        //const dev_lat = Math.random()/10000;\r\n        //const dev_lng = Math.random()/10000;\r\n        var pos = {...this.state.pos};\r\n        const lat = message[0].gpsData.gps[0];// + dev_lat;\r\n        const lng = message[0].gpsData.gps[1];// + dev_lng;\r\n        pos.lat = lat;\r\n        pos.lng = lng;\r\n\r\n        var id = message[0].trackerID;\r\n        this.setState({pos});\r\n        this.setState({id});\r\n      } \r\n      //console.log(message)\r\n    }\r\n    \r\n    this.ws.onclose = () => {\r\n      console.log('Websocket disconnected')\r\n      // automatically try to reconnect on connection loss\r\n\r\n      }\r\n  }\r\n\r\n  \r\n \r\n  render() {\r\n    return (\r\n      // Container height the size of the window\r\n      <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyC88pIBqJfjmoON5zyQnQlGINnaJYG2IKE\" }}\r\n          defaultCenter={this.state.pos}\r\n          defaultZoom={this.state.zoom}\r\n        >\r\n\r\n        <LocationPin\r\n            lat={this.state.pos.lat}\r\n            lng={this.state.pos.lng}\r\n            text={\"Tracker (ID:\" + (this.state.id).toString() + \")\"}\r\n        />\r\n        </GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default SimpleMap;","import logo from './logo.svg';\nimport './App.css';\nimport './Map.js'\nimport SimpleMap from './Map.js';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <SimpleMap />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}